{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/Edgar/ironhack/w08/project-3/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Edgar/ironhack/w08/project-3/frontend/src/components/Buttons/ButtonLink.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  background: \", \";\\n  color: \", \";\\n  padding: 0.675rem 1.78571rem;\\n  font-size: 0.8125rem;\\n  text-transform: uppercase;\\n  font-weight: 500;\\n  border: \", \";\\n  transition: all 0.175s ease;\\n  display: inline-block;\\n  position: relative;\\n  ::after {\\n    content: '';\\n    position: absolute;\\n    z-index: -1;\\n    top: -2px;\\n    left: -2px;\\n    width: 100%;\\n    height: 100%;\\n    border: 2px solid var(--black);\\n    opacity: 0;\\n    transition: opacity 0.175s ease;\\n  }\\n  :hover,\\n  :focus {\\n    background: \", \";\\n    color: \", \";\\n    ::after {\\n      opacity: 1;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n/*************************/\n\n/********* CSS ***********/\n\n/*************************/\n\nconst StyledButtonLink = styled(Link)(_templateObject(), props => props.type === 'primary' ? 'var(--black)' : 'transparent', props => props.type === 'primary' ? '#fff' : 'var(--black)', props => props.type !== 'primary' ? '1px solid var(--black)' : 'none', props => props.type !== 'primary' ? 'var(--black)' : '#eee', props => props.type !== 'primary' ? '#fff' : 'var(--black)');\n/*************************/\n\n/********* JSX ***********/\n\n/*************************/\n\nconst ButtonLink = ({\n  title,\n  type,\n  to\n}) => {\n  return React.createElement(StyledButtonLink, {\n    type: type,\n    to: to,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, title);\n};\n\nexport default ButtonLink;","map":{"version":3,"sources":["/Users/Edgar/ironhack/w08/project-3/frontend/src/components/Buttons/ButtonLink.jsx"],"names":["React","Link","styled","StyledButtonLink","props","type","ButtonLink","title","to"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA;;AACA;;AACA;;AACA,MAAMC,gBAAgB,GAAGD,MAAM,CAACD,IAAD,CAAT,oBACNG,KAAK,IAAKA,KAAK,CAACC,IAAN,KAAe,SAAf,GAA2B,cAA3B,GAA4C,aADhD,EAEXD,KAAK,IAAKA,KAAK,CAACC,IAAN,KAAe,SAAf,GAA2B,MAA3B,GAAoC,cAFnC,EAOVD,KAAK,IAAKA,KAAK,CAACC,IAAN,KAAe,SAAf,GAA2B,wBAA3B,GAAsD,MAPtD,EAyBJD,KAAK,IAAKA,KAAK,CAACC,IAAN,KAAe,SAAf,GAA2B,cAA3B,GAA4C,MAzBlD,EA0BTD,KAAK,IAAKA,KAAK,CAACC,IAAN,KAAe,SAAf,GAA2B,MAA3B,GAAoC,cA1BrC,CAAtB;AAiCA;;AACA;;AACA;;AACA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASF,EAAAA,IAAT;AAAeG,EAAAA;AAAf,CAAD,KAAyB;AAC1C,SACE,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEH,IAAxB;AAA8B,IAAA,EAAE,EAAEG,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KADH,CADF;AAKD,CAND;;AAQA,eAAeD,UAAf","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\n/*************************/\n/********* CSS ***********/\n/*************************/\nconst StyledButtonLink = styled(Link)`\n  background: ${props => (props.type === 'primary' ? 'var(--black)' : 'transparent')};\n  color: ${props => (props.type === 'primary' ? '#fff' : 'var(--black)')};\n  padding: 0.675rem 1.78571rem;\n  font-size: 0.8125rem;\n  text-transform: uppercase;\n  font-weight: 500;\n  border: ${props => (props.type !== 'primary' ? '1px solid var(--black)' : 'none')};\n  transition: all 0.175s ease;\n  display: inline-block;\n  position: relative;\n  ::after {\n    content: '';\n    position: absolute;\n    z-index: -1;\n    top: -2px;\n    left: -2px;\n    width: 100%;\n    height: 100%;\n    border: 2px solid var(--black);\n    opacity: 0;\n    transition: opacity 0.175s ease;\n  }\n  :hover,\n  :focus {\n    background: ${props => (props.type !== 'primary' ? 'var(--black)' : '#eee')};\n    color: ${props => (props.type !== 'primary' ? '#fff' : 'var(--black)')};\n    ::after {\n      opacity: 1;\n    }\n  }\n`\n\n/*************************/\n/********* JSX ***********/\n/*************************/\nconst ButtonLink = ({ title, type, to }) => {\n  return (\n    <StyledButtonLink type={type} to={to}>\n      {title}\n    </StyledButtonLink>\n  )\n}\n\nexport default ButtonLink\n"]},"metadata":{},"sourceType":"module"}